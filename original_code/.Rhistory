cog12nlscf <- readRDS("cog12nlscf.rds")
cog8nlscf <- readRDS("cog8nlscf.rds")
cog5nlscf <- readRDS("cog5nlscf.rds")
health12nlscf <- readRDS("health12nlscf.rds")
health8nlscf <- readRDS("health8nlscf.rds")
health5nlscf <- readRDS("health5nlscf.rds")
cog12rqcf[[1]]
cog12rqcf
cog12rqcf <- readRDS("cog12rqcf.rds")
cog8rqcf <- readRDS("cog8rqcf.rds")
cog5rqcf <- readRDS("cog5rqcf.rds")
health12rqcf <- readRDS("health12rqcf.rds")
health8rqcf <- readRDS("health8rqcf.rds")
health5rqcf <- readRDS("health5rqcf.rds")
invest12rq
cog12rqcf <- readRDS("cog12rqcfQ1.rds")
cog12rqcf[[1]]
data.frame(cog12rqcf[[1]])
cog12rqcf = list(coef=list(), sd=list())
cog12rqcf$coef
cf12rq = invest12rq$residuals[, 10] # alpha = 0.5
cf8rq = invest8rq$residuals[, 10] # alpha = 0.5
cf5rq = invest5rq$residuals[, 10] # alpha = 0.5
model = summary(nlrq(log(cog12) ~ (1/rho)* log(s1 * cog8^rho + s2*health8^rho+ s3 * pcog^rho +
(1-s1-s2-s3-s5) * phealth^rho  + s5* invest12^rho)
+delta + alpha*cf12rq
+alpha2*numchild+alpha3*bornbef+alpha4*sex+alpha6*urban+alpha7*hindu+alpha8*muslim+alpha9*momage+alpha10*castesc+alpha11*castest+alpha12*castebc,
data = data,
start=c(delta=0.3, alpha=.05, alpha2=.05, alpha3=.05, alpha4=.05, alpha6=.05, alpha7=.05, alpha8=.05, alpha9=.05, alpha10=.05, alpha11=.05, alpha12=.05,
s1=0.2, s2=0.2, s3=0.2,s5=0.2, rho=0.01), tau = tau, trace=FALSE))
model
tau
length(model)
length(model$coefficients)
length(model$sd)
length(model[, 1])
model$coefficients
model$coefficients[, 1]
rownames(model$coefficients[, 1])
rownames(model$coefficients)
colnames(model$coefficients)
cog12rqcf = list(coef=list(), sd=list())
cog12rqcf = list(coef=list(), sd=list(), lb=list(), ub=list())
cog12rqcf$coef$"alpha=0.5" = list()
cog12rqcf$coef
cog12rqcf$coef$alpha=0.5
cog12rqcf$coef$alpha=0.5
cog12rqcf$coef
cog12rqcf$coef[alpha=0.5]
cog12rqcf$coef=list()
cog12rqcf$coef$'alpha=0.5' = model$coefficients[, 1]
cog12rqcf$coef$'alpha=0.5'
cog12rqcf$coef$'alpha=0.5'$delta
cog12rqcf$coef$'alpha=0.5'['delat']
cog12rqcf$coef$'alpha=0.5'['delta']
cog12rqcf$coef$'alpha=0.5'['delta', 's1']
cog12rqcf$coef$'alpha=0.5'[['delta', 's1']]
cog12rqcf$coef$'alpha=0.5'[["delta', 's1"]]
cog12rqcf$coef$'alpha=0.5'[["delta"], ["s1"]]
cog12rqcf$coef$'alpha=0.5'[["delta", "s1"]]
cog12rqcf$coef$"alpha=0.5"
length(cog12rqcf$coef$"alpha=0.5")
cog12rqcf$coef$'alpha=0.5'[["delta", "s1"]]
cog12rqcf$coef$'alpha=0.5'[c("delta")]
cog12rqcf$coef$'alpha=0.5'[c("delta", alpha)]
cog12rqcf$coef$'alpha=0.5'[c("delta", "alpha"")]
a
?
cog12rqcf$coef$'alpha=0.5'[c("delta", "alpha"")]
cog12rqcf$coef$'alpha=0.5'[c("delta", "alpha")]
model$residuals
setwd(dir_data)
rm(list=ls())
set.seed(23031984)
suppressMessages(library(R.utils))
suppressMessages(library(ks))
suppressMessages(library(gdata))
suppressMessages(library(corpcor))
suppressMessages(library(minpack.lm))
suppressMessages(library(Matrix))
suppressMessages(library(foreign))
dir = ("/Users/yaolangzhong/Child_Project/RES2020_QR/")
dir_data = paste(dir,c("Data/"), sep="")
dir_code = paste(dir,c("Code/"), sep="")
dir_output <-paste(dir, c("Output/"), sep="")
dir_graph <-paste(dir, c("Graph/"), sep="")
library(dplyr)
library(lubridate)
library(xtable)
library(ggplot2)
library(tidyr)
## measures from Bloomberg
load("data/bloomberg_uncertainty.RData")
library(xtable)
library(ggplot2)
library(tidyr)
## measures from Bloomberg
setwd("/Users/yaolangzhong/Nottingham_Replication/original_code/")
load("data/bloomberg_uncertainty.RData")
bb <- data %>% as_tibble %>%
arrange(date) %>%
rename(SWIV = USSN011) %>%
mutate(SWIV = SWIV/100, SRVIX = SRVIX/100, MOVE = MOVE/100)
library(dplyr)
library(lubridate)
library(xtable)
library(ggplot2)
library(tidyr)
## measures from Bloomberg
setwd("/Users/yaolangzhong/Nottingham_Replication/original_code/")
load("data/bloomberg_uncertainty.RData")
bb <- data %>% as_tibble %>%
arrange(date) %>%
rename(SWIV = USSN011) %>%
mutate(SWIV = SWIV/100, SRVIX = SRVIX/100, MOVE = MOVE/100)
## TYVIX: 01/01/2002 discontinued 5/18/2020
## mpu
load("data/mpu10.RData")
data <- mpu10 %>%
rename(mpu = mpu10, bpvol = bpvol10, normal = normal10) %>%
select(-f10, -normal)
## Bundick's data
bun <- read.csv("data/bundick.csv") %>% as_tibble %>%
mutate(date = make_date(year, month, day)) %>%
select(date, edx4q)
## Swanson's data - Swanson and Williams
swan <- read.delim("data/swanson.txt", header=FALSE) %>% as_tibble %>%
mutate(date = as.Date(V1, "%Y  %m  %d"),
swan = V4 - V2) %>%
na.omit %>%
select(date, swan)
## TIV - 1982-2018, but from 2016-01-20 equal to TYVIX
tiv <- read.csv("data/tiv.csv", na.strings="#N/A") %>% as_tibble %>%
rename(date = Date, TIV = TIV_10y) %>%
mutate(date = as.Date(date, format  = "%m/%d/%Y")) %>%
select(date, TIV)
## combine data
data <- data %>%
left_join(bun) %>%
left_join(swan) %>%
left_join(bb) %>%
left_join(tiv)
## combine TIV and TYVIX
data %>% select(date, TIV, TYVIX) %>%
filter(date < make_date(2016, 01, 20)) %>%
na.omit %>% with(cor(TIV, TYVIX))
## from 2016/01/20 Philippe just used the TYVIX
data %>% select(date, TIV, TYVIX) %>%
filter(date >= make_date(2016, 01, 20)) %>%
na.omit %>% with(cor(TIV, TYVIX))
data$TIV <- rowMeans(cbind(data$TIV, data$TYVIX), na.rm=TRUE)
data$TYVIX <- NULL
## FOMC announcement days
fomc <- read.csv("data/fomc_tight.csv") %>% as_tibble %>%
rename(date = Date) %>%
mutate(date = ifelse(date=="3/15/2020", "3/16/2020", date),
date = as.Date(date, format="%m/%d/%Y")) %>%
select(date) %>%
mutate(fomc = 1)
## summary stats for appendix
## E(u), var(u), E(du), var(du), starts, ends, nobs
nms <- names(data)[-1]
nms_long <- c("SRU", "BP vol", "Bundick", "Swanson", "Swaption IV", "SRVIX", "MOVE", "TIV/TYVIX")
changes <- data %>%
mutate(across(all_of(nms), ~(.x - lag(.x)))) %>%
left_join(fomc) %>%
mutate(fomc = replace_na(fomc, 0))
tbl <- data %>% summarise(across(all_of(nms), mean, na.rm=TRUE)) %>%
add_row(data %>% summarise(across(all_of(nms), sd, na.rm=TRUE))) %>%
add_row(changes %>% summarise(across(all_of(nms), sd, na.rm=TRUE))) %>%
add_row(data %>% summarise(across(all_of(nms), ~sum(!is.na(.x))))) %>%
t
colnames(tbl) <- c("Elev", "SDlev", "SDch", "nobs")
tbl <- as_tibble(tbl) %>%
mutate(name = nms,
long = nms_long)
tbl$starts <- sapply(nms, function(nm)
data %>% select(date, all_of(nm)) %>% na.omit %>% summarise(min = min(format(date))) %>% as.character
)
tbl$ends <- sapply(nms, function(nm)
data %>% select(date, all_of(nm)) %>% na.omit %>% summarise(max = max(format(date))) %>% as.character
)
formdate <- function(d) paste0(sprintf("%02d", month(d)), "/", year(d))
tbl$period <- sapply(nms, function(nm)
data %>% select(date, all_of(nm)) %>% na.omit %>% summarise(paste(formdate(min(date)), formdate(max(date)), sep="-")) %>% as.character
)
tbl$cor.mpu <- cor(data$mpu, data[nms], use="pairwise.complete") %>% as.numeric
tbl$cor.dmpu <- cor(changes$mpu, changes[nms], use="pairwise.complete") %>% as.numeric
tbl <- tbl %>%
select(-starts, -ends) %>%
relocate(name, long, Elev, SDlev, SDch, cor.mpu, cor.dmpu, period, nobs) %>%
print
tbl <- select(tbl, -name)
cat("Correlations of changes on all days:\n")
round(cor(changes$mpu, changes[nms], use="pairwise.complete"), 3)
cat("Correlations of changes on FOMC days only:\n")
print(round(cor(changes$mpu[changes$fomc==1], changes[changes$fomc==1,nms], use="pairwise.complete"), 3))
print(xtable(tbl, digits = c(0,3,3,3,3,3,3,0,0)),
include.rownames=FALSE, include.colnames=FALSE, only.contents=TRUE,
sanitize.text.function=function(x){x}, hline.after=NULL,
file="output/table_1.tex")
## figure for appendix
pdat <- data %>%
select(date, mpu, edx4q, swan) %>%
filter(year(date) >= 1994,
year(date) <= 2008) %>%
rename(SRU = mpu, Bundick = edx4q, Swanson = swan) %>%
pivot_longer(!date, names_to = "series", values_to = "y") %>%
mutate(series = factor(series, levels = c("SRU", "Bundick", "Swanson")))
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("black", "red", "chartreuse4")) +
ylim(0,max(pdat$y, na.rm=TRUE)) +
xlab("") + ylab("Percent")
ggsave("output/figure_A2.pdf", width=6, height=4)
pca_series = na.omit(data[,c('bpvol', 'edx4q', 'swan')]) %>%rename(BPV = bpvol, Bundick = edx4q, Swanson = swan)
pca_result <- prcomp(pca_series)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PC1 = -pca_components[, "PC1"]
PC1 = PC1 + mean(unlist(pca_series))
pca_data <- data %>%
select(date, mpu, edx4q, swan) %>%
na.omit() %>%
rename(SRU = mpu, Bundick = edx4q, Swanson = swan) %>%
cbind(PC1)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PCA"]
pca_series = na.omit(data[,c('bpvol', 'edx4q', 'swan')]) %>%rename(BPV = bpvol, Bundick = edx4q, Swanson = swan)
pca_result <- prcomp(pca_series)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PCA"]
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PC1"]
PCA = PCA + mean(unlist(pca_series))
pca_data <- data %>%
select(date, mpu, edx4q, swan) %>%
na.omit() %>%
rename(SRU = mpu, Bundick = edx4q, Swanson = swan) %>%
cbind(PCA)
# pivot the data to a longer format
pdat <- pca_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("black", "red", "chartreuse4", "blue")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
pca_data <- data %>%
select(date, mpu) %>%
na.omit() %>%
rename(SRU = mpu) %>%
cbind(PCA)
pca_series = na.omit(data[,c('bpvol', 'edx4q', 'swan')]) %>%rename(BPV = bpvol, Bundick = edx4q, Swanson = swan)
pca_result <- prcomp(pca_series)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PC1"]
PCA = PCA + mean(unlist(pca_series))
pca_data <- data %>%
select(date, mpu) %>%
na.omit() %>%
rename(SRU = mpu) %>%
cbind(PCA)
row(PCA)
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PC1"]
PCA = PCA + mean(unlist(pca_series))
selected_series = na.omit(data[,c('mpu, ''bpvol', 'edx4q', 'swan')]) %>%rename(SRU = mpu, BPV = bpvol, Bundick = edx4q, Swanson = swan)
selected_series = na.omit(data[,c('mpu', 'bpvol', 'edx4q', 'swan')]) %>%rename(SRU = mpu, BPV = bpvol, Bundick = edx4q, Swanson = swan)
pca_series = selected_series[, c('BPV', 'Bundick', 'Swanson')]
pca_result <- prcomp(pca_series)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PC1"]
PCA = PCA + mean(unlist(pca_series))
plot_data = slected_series[, ('SRU')] %>% cbind(PCA)
plot_data = selected_series[, ('SRU')] %>% cbind(PCA)
# pivot the data to a longer format
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
selected_series = na.omit(data[,c('date','mpu', 'bpvol', 'edx4q', 'swan')]) %>%rename(SRU = mpu, BPV = bpvol, Bundick = edx4q, Swanson = swan)
pca_series = selected_series[, c('BPV', 'Bundick', 'Swanson')]
# do PCA
pca_result <- prcomp(pca_series)
print(summary(pca_result))
pca_components <- pca_result$x
pca_loadings <- pca_result$rotation
PCA = -pca_components[, "PC1"]
PCA = PCA + mean(unlist(pca_series))
plot_data = selected_series[, c('date', 'SRU')] %>% cbind(PCA)
# pivot the data to a longer format
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("black", "red", "chartreuse4", "blue")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
# pivot the data to a longer format
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue"),labels = c("SRU" = "SRU", "PCA" = "PCA(BPV, Bundick, Swanson)")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
library(psych)
factor_series = selected_series[, c('BPV', 'Bundick', 'Swanson')]
# Perform factor analysis
factor_result <- psych::fa(factor_series, nfactors = 1)
# Get factor scores
factor_scores <- psych::factor.scores(factor_series, factor_result)$scores
Factor1 = factor_scores[,1] + + mean(unlist(factor_series))
plot_data2 = selected_series[, c('date', 'SRU')] %>% cbind(Factor1)
pdat <- plot_data2 %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue"),labels = c("SRU" = "SRU", "Factor1" = "Factor(BPV, Bundick, Swanson)")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
plot_data3 = selected_series[, c('date', 'SRU')] %>% cbind(PCA, Factor1)
pdat <- plot_data3 %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue", "purple"),labels = c("SRU" = "SRU", "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("yellow", "green", "orange", "blue", "purple"),labels = c("BPV" = "BPV", "Bundick" = "Bundick", "Swanson" = "Swanson",  "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
plot_data = selected_series[, c('date', 'BPV', 'Bundick', 'Swanson')] %>% cbind(PCA, Factor1)
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("yellow", "green", "orange", "blue", "purple"),labels = c("BPV" = "BPV", "Bundick" = "Bundick", "Swanson" = "Swanson",  "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
plot_data = selected_series[, c('date', 'BPV', 'Bundick', 'Swanson')] %>% cbind(PCA, Factor1)
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
pdat$series <- factor(pdat$series, levels = c("BPV", "Bundick", "Swanson", "PCA", "Factor1"))
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("yellow", "green", "orange", "blue", "purple"),labels = c("BPV" = "BPV", "Bundick" = "Bundick", "Swanson" = "Swanson",  "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
plot_data2 = selected_series[, c('date', 'SRU')] %>% cbind(PCA, Factor1)
pdat <- plot_data2 %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue", "purple"),labels = c("SRU" = "SRU", "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
pdat <- plot_data2 %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
pdat$series <- factor(pdat$series, levels = c("SRU", "PCA", "Factor1"))
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue", "purple"),labels = c("SRU" = "SRU", "PCA" = "PCA", "Factor1" = "Factor")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
plot_data = selected_series[, c('date', 'BPV', 'Bundick', 'Swanson')] %>% cbind(PCA, Factor1)
pdat <- plot_data %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
pdat$series <- factor(pdat$series, levels = c("BPV", "Bundick", "Swanson", "PCA", "Factor1"))
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("yellow", "green", "orange", "blue", "purple"),labels = c("BPV" = "BPV", "Bundick" = "Bundick", "Swanson" = "Swanson",  "PCA" = "PCA", "Factor1" = "FA")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
ggsave("output/components.pdf", width=6, height=4)
plot_data2 = selected_series[, c('date', 'SRU')] %>% cbind(PCA, Factor1)
pdat <- plot_data2 %>%
pivot_longer(cols = -date, names_to = "series", values_to = "y")
pdat$series <- factor(pdat$series, levels = c("SRU", "PCA", "Factor1"))
# plot
global_min = min(pdat$y, na.rm = TRUE)
global_max = max(pdat$y, na.rm = TRUE)
ggplot(pdat) +
geom_line(aes(x=date, y=y, color=series)) +
theme_bw() +
theme(legend.position = c(0.8, 0.8),
legend.background = element_rect(colour="black"),
plot.margin=grid::unit(c(0,0,0,0), "mm"),
legend.title = element_blank()) +
scale_color_manual(values = c("red", "blue", "purple"),labels = c("SRU" = "SRU", "PCA" = "PCA", "Factor1" = "FA")) +
ylim(global_min, global_max) +
xlab("") + ylab("Percent")
ggsave("output/comparsion.pdf", width=6, height=4)
getwd()
